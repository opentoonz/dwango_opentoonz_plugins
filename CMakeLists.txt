cmake_minimum_required(VERSION 2.4)
project(dwango_opentoonz_plugins)

if(WIN32)
    if(CMAKE_SIZEOF_VOID_P EQUAL 4)
        set(PLATFORM1 32)
        set(PLATFORM2)
    else()
        set(PLATFORM1 64)
        set(PLATFORM2 _64)
    endif()

    if(PLATFORM1 EQUAL 64)
        add_definitions(-Dx64)
    endif()

    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP /openmp")
    set(PLUGIN_UTILITY_LIB "${CMAKE_CURRENT_SOURCE_DIR}/opentoonz_plugin_utility/lib/${CMAKE_CFG_INTDIR}/libopentoonz_plugin_utility")
endif(WIN32)

if(APPLE)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -stdlib=libc++")
    set(PLUGIN_UTILITY_LIB "${CMAKE_CURRENT_SOURCE_DIR}/opentoonz_plugin_utility/lib/${CMAKE_CFG_INTDIR}/libopentoonz_plugin_utility.a")
endif(APPLE)

if(UNIX AND NOT APPLE)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
    set(PLUGIN_UTILITY_LIB "${CMAKE_CURRENT_SOURCE_DIR}/opentoonz_plugin_utility/lib/${CMAKE_CFG_INTDIR}/libopentoonz_plugin_utility.a")
endif(UNIX AND NOT APPLE)

find_package(OpenCV REQUIRED)
set(LIBS ${OpenCV_LIBS} ${PLUGIN_UTILITY_LIB})

include_directories(opentoonz_plugin_utility/include
                    opentoonz_plugin_utility/plugin_sdk/core
                    "${OpenCV_INCLUDE_DIRS}")
link_directories("${OpenCV_LIBS}")

add_subdirectory(opentoonz_plugin_utility)
add_subdirectory(BlurChromaticAberration)
add_subdirectory(BlurConvolution)
add_subdirectory(BlurCurlNoise)
add_subdirectory(BlurMaskedC)
add_subdirectory(BlurMaskedD)
add_subdirectory(BlurMaskedR)
add_subdirectory(CoherentNoise)
add_subdirectory(ComposeAdd)
add_subdirectory(ComposeMul)
add_subdirectory(ComposeOptical)
add_subdirectory(Drip)
add_subdirectory(ImageQuilting)
add_subdirectory(Kaleidoscope)
add_subdirectory(LightBloom)
add_subdirectory(LightGlare)
add_subdirectory(LightIncident)
add_subdirectory(Paraffin)
add_subdirectory(PencilHatching)
add_subdirectory(Tiling)
add_subdirectory(Waveglass)
